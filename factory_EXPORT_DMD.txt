// Options: Export entire program; Code Block delimiter instructions;
// Formatted Rung Comments; Element Documentation Database w/Flags;
// System Configuration; Memory Configuration/Devices with Built-In Types and User Add-Ons;
// use Element names (no NickNames); rung/address annotations;
// <TAB> parameter delimiter; 
// Write/overwrite file C:\Users\dev\Desktop\PLC\plc_factory\factory_EXPORT_DMD.txt

PLC BX-DM1E-36ER3-D

// Do not modify SYS_CONFIG block!

#BEGIN SYS_CONFIG
4bba3ab7248dfdc4362cf1502351a46b0508d69f5af748c0cd3ba8252d14da47167e7ac1c14bfeaa
f6566e39945f45c4d37b24c43c12c092fc4643c90876c5c313f4c47f26ea25a7ec528bcad2088dad
7d55a71e01393d8ea5d87ea9a6a5b92d20e2419ffbdb80d0ecd65dfa52ad6852305ffea027e5e2c3
efdba502cd8b58ff27657fc1776a8cdeb067a82f66a326f827daf0cd56b0737c979e1844102a0721
20e184fad4797b60065b69e5cac4a3b4062d78f199933e948a2dae2434585f7d6b84cf2481487167
5f807862aa9c89bcb2d2b2eb5ac2153ce977d0534402728492ea316558ca677d9c6244d61d5bc9ff
23f957ef6855e4d7a4224c7e75caa9445d575036651639df89bb8a44d393892ae8af5ab813c9107b
3741093050e29111e30fb9ccdaf53de3f0e3447919dfe1e58f3b50096ab1102711d5c35d8787083f
6bd6bf19bb5e11507904f0bd1d8fff18036d2b672c6d7b87055671cf38e0f6d20a82f5cba3495985
31f6f31db1d00ce145edb71bb2052d57f9849cad83d79cd05945323c55e32a096e579e02421b91a9
76280064fe2d022ab8aed73235a6aaad2c7a4e890af86819d8d2065782b55eba1e0bd7a61c227a2a
a155c33c94fbf989c908469c54876fdf88a55fc310b95d6e876eee9f8296bf050e88133bfbdadaaf
3f9791a9e8bad043de0c4fe3d82bd4ada100368c9d2ae2fa757062d19385fc5cf2e89a0525cbefc4
782c032c234e68eb29ee68611f905b60c79fb2a8db1dd9d0ea7d907ac288db7b120d0b6b03fc013c
3bd910b181a8c01cdb4dcb408552a468d1f7d25ed5ee5ee52c785b7e7ad0db71c920e5ee94b3f304
9d10d72be3e15d2fc663d16ca7fd2d6919be50c464b7bd3d62c80a0959d8aa6e9ab4d4d47e86cd2f
ce2980c40a85e1046909007e57dfeb214fd48968a6a50656a0504fd62b2a8fb90e59b97787091672
8911e60973133a5988c3c1c457d72242ebd77ac6fd79306f24bd5cea6213386558b89ab4f7a9b58b
a43ae33f95f44959ee1de905bf8ea065c9134c9a6807d2ec7d31ccda6e3b11077bc240706e49ffa4
64337689eacb4bbc4a5ba91aa55b2ff006cc65fd6ad8b99c500e73648ebc0623cf592137713e3c61
63b6155875ac567f0c16bc314e675e03ac2c53a2af77e94e4e1c7a1f9af3fe7bd44b166c08d5d099
83724b14f05ac840a8c625b56f3c3365dbdafdca08059b1980b8015ee4ec4b4f923bf07bd7d14bcc
656d03f6a4f0d8a1e626dd6b1ce594bf746839e40523407898af6d0bd7e206116bf009bf5090b087
d368bcd3d9892d633d987eaa978eebf9b3d308cefac11b6ee8cb15139bea8d84e0abaed11635b94c
750195fc0009918ab54d90fefedae48ec37facece917ead4a342946467b60ce8761e54bbb6c15640
ce80821f7a3a46e04ac9deeae09564065fd5efbe26e9d69597aa7e72ee545d288c5eff272a190b8e
cbc86b481b13b88c3a7c7cdb57ebe9c58d45b4a8a330aad39d1010b4e1f8bd86508e822b5cb3e93d
26dde04e32197e8774c5d5c7edd75be30b0072130c174a74befe3a551bd17d0decd8850837fa88e7
f8a39ab7736c129a19fb4aa00b226578e75adbe4b2107076e554d112dbd07f88c0b5e9db972f46c8
fc17453187c6d3ab2b43312972fe7a248ea411340713c2ed2a90a8c42e532e74f522c26af86b09be
26b52ee4cdc7baa2e76ceb7cb0dafac92eaae8b6b1c02e5e8ca58b9bae1ed34963d0cc838ae8bfbb
e645c720d53b53c2c806c88e7e74dc9820a0cc072e0ce3c1bd86b08fb0e7fcbad91f1cc42977d0d8
dd382eee790eac30bae9624045b88fe4f2bed2167650008fb475e29537bf3566edcfca37e0256662
01842cae714ecc3e16e473ace7112683703401f037c56a2b33851af0e527d8a0f0dd4b56ade06d7b
5a2ed39d39ace0eefb33eb9cb28c3c6800e1a068f5a3f7d2e67b823be4e8d78dcb0bcf3944cb5d6b
1e7ed9f41e8882c57343998ed4ab18ee679914cbe48b9cf582233b5a81f33c28fda95b617c81c13d
4b68cb76faa211d317c30258719240c4c49889e95834321a095a0986dd00373c30caedc7c086e5e1
c9265c5f0fa2972c05871d619bdea72847cfdcdfa3ca08774963b92a4d236b096783a81adfcb3b14
d6331c34f7e564aec721121607a1b26494c63e1a4a168fc33057e72d170b90da57277c62a71f4260
ba9ecc468e2d3daa4adc0dc884c4f0d7ece1342fa472d850eead6fb8eb7494c27df121db64974450
453edf0bf07db239b25adfc88dec084a03bffc36c192c134629d11c03a916231c2b6068979b067fe
4be8602801fc9a75328e0ede0c1b91bf5dd0bf5921a3137039abfdfb921a26b34538cf2485270fb7
b9cd297e486d1af2171df4ff09f90a238c0ef157deda0e299fa88f6bdfa50dc67c727633e1cc6bd5
8fc98858ab0a9723901a0b869f926974683d476bda046f1b0b1e2d9b36fecfc94ac4fffa6c6ecf80
d28c7c7d3155d168e77953682c0903fd5d9633be3004d133129cb0860a5494858bc7d014f550491b
dbe69840bc40b2f80fafbf05133673fe70f87270261ab5436ff5479ac8470cad24d2443781365da9
580311e1c527c32632da09cdbf29da86f5d224941da63f1c3a43856e5881215fa4beecff0e2aaec4
0ef442f2536dbb991d9a534b8424d3ae2947586e4d4b360087c52e0c154a055ef94c4999c71fd212
57c4f012e9e07ddaf6ef2ce8154de42794844fd5b18600df8827f4b3dbe03c35ffda3915856f04f8
18e15b052fd68e590a2659163f313c24f006454a5dd98599ce0bf01fa329d6ad02fc4ab2de03df4c
a1b7e6836eb3518b77dabb6484d55d5a38c1a5a3bd291a58c7d10f2a12b538804441e92b128fb6ef
93757d5aaade2afafc3a34c8dfa13392a7662d1f35dfda74238fa8adb85885ba9b86200c15440a2d
cb1bcbc30766660cc8de2aeea2440889c144d5e71164f5e31238e0893b08aa4b50ad604022812b9c
ec860a16a5a4ab311532a550266c46bc564fb496d916d91d3fcfebaa5a1fcdd9d4d6bd79482a4218
62cde195e53b41997c8a2e561dfe0a3e6603f577a4ccc0ba367b7be509ea5ba7a3c3b935f7c99cb9
424be77d9443a96f84064fe556c17768b45e2a77b3e3c598737319fcd5c2fefd014e935da8fa79b9
d911e0d60649108983336f3c6273e317a9e947575bb22a25253810e34400060e7d77a63ff374fcea
f353ae9827b35f960eb89df380b5642fbdc7f75b05c8bf75db4c791e87720d264f9b6d19300e1b0d
4e603f00d6692d0a6bd61a0d78d5bbbec472cc27d050b5adc9e482d108b6df04879dd3ab06f85c6c
1184fd09022acaf1e848b543375349096035a6ef795655ead2b6f39af51b57a22d162e370b469351
577e6a2d8089778256ac0cdf897acada087370208d3a51693e9b28e10fa57ef614dca9061fe21fe1
381e3cb2222fa58a1b8ed78d28e2469c29b6f8488bf1f2a20ff74cb7466978f90670ad182b949a0a
cf949cbd89567a4fccd035ed1c489de1ed84630486245e001082a3fc29b1f375cd7437e3c3dc663d
e23a911bd219a9c2aeb1ffca82cbec0e70913d0d28c27188cdb0392fcc9b9a9445099f2aa1c3a766
c9178d7ae48ff1eadadc5426e17afaa020a8d76072ed4244f249b58de5e44d4b6dae679ffda327b2
1256b4898dc6ba195107d083c493cce4db00204edd3135b2a2de4ef27907296829f6e4f048b7bf5a
fb878f3ceb8e4a38d416f08db095cd9e714527bb91d1b08e193d9c51fb47b69701205331a33b4a7b
20743389a5445fe997dcac6e84afaac82f44465d6d6b235057a78db9971b648c9e01aee6f0a26e03
5cea4ed2e320e911002eab3c9cd83a02c696ad5dda46efcc5446d9761e088ea4e3ddaa82eff561a1
d285b3c99dd1629e42ba5c8ef3ceeb7239d9cb54fbcd7b90f66497b59dd0a59b356827253fd8ed19
7b823e77be95a16fef4aad119c252d2376fa578f4e2771c0abc75817624daee7eb907120fe649319
925ad842df7483cf381226088a7546aefe9bbddb240e4977903a716f5b05d5faede45e82e72311e4
88df0b8c901e55b9ab349bed5b98675f3746ef6465a66f97d25cc86d98eb5e626644a33cfcbe5bf7
19a52891818fcf10c86399506f86ac9020907cdb14ab64e8d3cdc5a27669695c965d1cc62359fc74
f8359fcc594b43525fe956da0de2413e13ca33ed59d312d94a503cc0a6d41b45ccaefaff11ea16c4
429b3d7640d8dfa58a1b2bb9e8bc19719b3013df6e2312f80af6a2c9f604d5afce7f555e22f0f61f
c950fdf4baaba5bad6343745f5e591a2ccd965a71c0ffceffebf43018c4ccbcdf384aca99455a3a7
e6e45de7c3bad301da304108d532756793f20745d407a7e3888b45809036d60066a14cabb12ae54d
51a2549b16f444792abde041d25fad51203c5ab0da8494068344c49ada450e0d1da20dadfbca7249
0fb20212b45583e5e21ac9ab3da73b90618d5ed33181e0f226070e3f0b008c50c7f36ceae14fdc1c
f55c7f1fb10f084046a5ef069e2a546717610eb36d4da3ca8bcf0738e9ece8d7d3faaa04aa1cb4f6
339e0f59bfd229c58dea7e2b766f88ad878ce189a8d68ae4950ae31efe94a862f14847631717414c
caf6ab905a7b3ab3b326cadbda7371cf382a0ef0712ecd1819cc1a6fa213d101c6761529e1598bee
e0b9c62fcb2d02d1e41cfaefe1e6bca195d4142f5124165e87ccb4423396b18c5753b5a56475ab14
a306522ab27fb1d233ba66b4786349cbd3b316b123b133a85d19c76bf6c0a9e53e58996488a14728
7bf4543100f1d1ca6929bd303ddee9d713ee022b2196b8471791dda5f1ac93b3671886685626df4e
e803cbcccef476a95ae9362f19be4ca97b9a6e6efb876ea567c437fdf21bc8233774a9f3f3523630
86d9310bdf62039e62125b005dd9d0fccbdcda4e3fe15f47f045fbaed754a8d89103399a480dd31b
64b88e3629e79c93c974158a76064f1449cd42e991c8bd334ab5fd79b846386ef7b4b95772b3feca
ee4884bc34fdebbb69383dd865ac241df90a98e02934c76ee42936a9acd07d0e59f83d3f7784d652
19d219d57e92073e01b04f292f727a3fd225e0fc34f8d76f2b151fb59fed1b710f7a81b38dd3bf0e
f6cfe30b05cef03007ff7e500d9e43a54744b7ff6a1514597cf41c7d16501dc787c4c0980ad1d410
d3015428e576b40b013242f4aa203e9b1ee38554af1dd151e5b8df93c8f0420f617f9b0988301de8
c91aea96104503ac9f97cf5dc46cdb85386545286752b1539e1ec139923c72c523e664327d0ab461
5b65b8a49cb877e2b965b008574ec7435cd01c5b4f813406fdfe97632e280fa0cdc8df073a03321e
479570a593009bb1c90bb7db5f296f7268083cd87733006e0b49724b3a34a6acd4299f8168df93dd
4a7e5f4b5c16fe6449ab2d743d55b89406a2a32fe31c473acb94acb309833666d3b1d80fe5ffdc91
3577117535660cd0c05ba26a9bc93867a54998a84a3fe3008967757d151b909bed8c1d6eb0945b87
badb54273c876c9289926c42239cf1f605da3bbd6fbb56dbc11eab44f12d5cefd8c101873c6ce1a0
7784fccad2fe690861c31642d106d622d030efe6137492fbaca8de96f12566f27364c5fce44e2b56
9933bce6782fa78e08d648eeeaa1645621a1ff2bcfdb4b75aac90a0d82dfa3589f679160fc38311f
8479fc9481ec76de878538bcb03cbce7a3b09ba11ac16ceb845b19e84902e435e49039c1c73b7144
75c191c8ed02551245db4a3b06b6a9d7cf13cb86ae6d9d60c1f2417fbb5f55d67aa504dcc2846de4
72be8c4839d71dd30f80e22b03c1723cfaa794a7873f23a9ca872152907dd9d6fb3b0fac7393a842
ff6bddccbe44c2706c0d3cc86199e1e2cde58623beb61931c9a189ea32342002859402de409b57f3
7cf09824a7dc6729378cc2b6825d66b4163827cea0839f41a7ad5318abad5fd38721ae4d25f50f2e
9895faf909b23d5cd54d63964b5fccb573c55a6203f76df3f5c88438123d2417c764d2ea998bd86a
7edb7ed2d9c42ca2b1924232fa8eb76ddb7e4d98418b26d4381e1c4ec4547037586dfb1750a3b9bd
8960a653d9cdac8aac43e09232f84779e2af57be8d3f63436ea0f2afbc35710050b5bc16b8d0b634
177f5dd077247e557e8c05f67c4fa7231dfa9d588902f1e08dad93b3ec79ce72e889fa45f3b4b9d2
f8cbabc5ef7c4202f54513125792ca18ef503e578ba393ad71336ddfd6dff2b4c8dac23578463fe1
81944b1d18732e67273c780edff315bce777a5f188db00dedfae94f4a77385d44b083a6a966907d1
5c171ea4f163d6042482c288fd8259618844400f174603d6cb4ff6b9bddb6adeafeaa706ae96496e
200151437666959f66eae4ecdb5142b6b397bcb2034fcd19fa1d35360a6e9171b71b6ce66ee191f8
56664dc78bd987fb3d989d4b756bcccaf9f5da7cdd05239a5376ae0146c1476fd3592f56dbe9c776
e29bafc3b04fbe92e069ccb682be58d63c2c37521dc56c2cf42eef79c420258b6424a5daf395037a
eb40716df96af607a5959a9703c5bc569d24e9dc60e399a67a01de23e9aeaa1688c299d210083f8d
113f884182c485c03a3f49e2a48daadc24e6e2b1cd6e59e3baea95367d3f9027bf4e71a06de2ed61
59d7acec970cd3f717112296e7a24ba12e7e657e732f3b7fb12d5cea038ece621321f06108eed5e3
c9352b18d778091a4673b415974cac7d849ecf0686d24ddef41fc1d21ed52774b2e91acd5aa2509a
44e24a05224736908d8b9fd2013f61122d04cd2f22789f2008c36ebc466a815fa5170dfc28886fae
477ebed26d74e066bc9b2d1aa05494ee46ed7f7742de9dabbd92fef5717efcdc016176529d01705d
fef3f97d4b65987419bb5367790d1625ca42860b3f4ae5eae7014341145cb078728b975e742f676b
e286dac346fae2a8a13b6a8df29f726644b50da0694848b8a5f7659aba1a06d7a28534fd9d3e93fc
c48195ef5bc754fa375bab05bc8b2b446df5b472c4888edd3098acdae6a05541cd948f5a1a7e71d5
5ade641db26d625ada663635ac10610b1657e97729e2260900a8b0b699c861510d2b283fabb2a2b6
96f8098d6b83c9e85aed202dab256b0eae41cbffb227799a0e020ac3def1be0bbe841589f8635089
d5f2acce0b69bfbade22d33f4fc129817cc11b1588ca718fdd83139c1433a15927a0b813848446bc
107f4c7626e083043651bec97b56a8c3d62ff228aac38d0ec769ac88b66d5e42c9946584f9ac2fe5
0502d015809fe8f6d90b3a3444aa955fdb468d3a5b45b2ec5408007f526f81d368a6085aecbf3e97
f0ce270fa5910a2bc39afd49a792ff0a93f402eea186c6bd4250e817717014fac9d8279d3b129880
7c03a9ce5c72753e0acf1c27e9c2c2adeb516bd32c00028036f90ae5705ded9278bbdde38c25c5a7
71d1fe84c758e75786d74099cea3bdc94fbcbc9d0cee55d088900e99280d1a25598abadd5f317c43
0abc9b86f3c6edbd43963c5ad8132246d1606a7956f13d004adb64a3ddf5e0b0332323c679da869a
022e01db7f9b762181b7606708e9dfec862e5e34e7530b7b4dda2661f411c0cb8bcfa1db58a77906
6f4f5a2a98ebea13d3581802464ef51b159d2a74502209b66ad5374e89d8dc9d71ed615b8d4aa36c
f11d6fdcb17862a5fa02aa89c73ecd827b424a6914ab09039aef3d3d0e2809fd8244fe59f4f1c4df
4792465a33269f72a209325c335cca02242e064590c745b9e6e387116c1338073e7ea593cc95551e
87755d65d3b797f7c1b57af74d32aba7fa0fa14e4b868207c9e4da5e6f974f8b6ae6d1d495c72976
8a9c0eadd9a676c6c61afd19d0c7a382b95ed38f6d3dccdeea27aaa0e55c89c5d92ef757aaadbb50
21d8d710b72a828212a30b7ef8d504a4eba46db61a341d4e144e6ce9db53178295981629fbb9ab0f
dbff5a22fdc9fa313506b24c98b447bd702662468558ed887a2696c9e068a67ff8f3c59ffbdb59bb
ad1b7002bb2c5dd4d1facf5ce4e71b9a87b2d325fb22af6d298a0b5546534dd2ac9521ae8b75d13a
f2fa28674596277e045f7c7dbfed40f86ea6b202ed1634e7f108de8c5d15021ad6cefafe7ed2b710
3f6f78840e24dce84c880b8b23dfbec7dd1af2ad1e53dc1b6e63dedb2e73364f03410546cbee8ff2
2dec7965377510501ba3a9efca65ee307a5d83c79fea73be240e7a2ec354bccabcf23e789a488c6f
9859948f75997eac5119bbd691c37977731d427792c37ee74a00204f5a65856190dca6e5851ee21d
1c24f8ae20c04528c40a30d835af7d5e42540fd38d864cc821457cd68c0b9252ea5f9d13dd1e3a61
b56b13c3be364ae89c6c0148d36751a59d77be7002216e80a3df75dee208070602b6a46013896bb2
6c01565062712c179958b90e77e691610ad0afac2763c9c749663672d6a02dd693d466a3de784ca9
737979f1e5f704ad7a736b1fe8240900c235d4d43849fe53c9a6561c865f84b212439d3b3196fdad
5e89840c8a56ec5cc16c9484171a3b86468ab810fac80ad052cdfb8436bb4eca50737d093eaccc18
b4745fc540f4c5ddab6d8ffa56dbe9e29ea5f95a9d494d360db794f230bf68c39479b90162709aa0
ce148f002f0b69f8e0ebb5e52d39702be2269975c749cea86695339f126ada173720394e7b4e9fcb
562c1e1be8f61a1c09b8a045f005584c6c7b1dc65afaa8867b618fab04eed01b93d06038c356cd25
ef43562e4b640f445c9636040541c4bee6b56b324a208805f91fd75b3d91e51028f1eb9e6fc8474f
5a4ed9ffa6e3970012d627099c62738686984208956e34a461d1c280cf01172495f554568a38c9be
768fb7bc878628f64560cf96ebf849f15443dc17ad803cad608511dd9f9f01a18df4736cdd65ee86
ab170ecaa6cf8f1f2211e7602a48d5bc71b41056bdfa79d2f6519f74e7ee07905a7cb3fd9c6efbf6
9600bf6f41c7452fa4941bf8ec9bc1232cabef86ba24728bc98407660df7cec14b9feee5d225b3e1
ed9592530fc6e4d33dc4388eb32397c639e32b54867fd10ed40bdeaf24e57ca0d0b70d1e31edd26d
6f8032cc6341cf93e58c5f566be0ce008c9a0e0d72e133a3124f30daf9ab0572ce1b46c254a7704a
8c57a0ede92641814f4b04179b4810bc87d609cd48d57453860b421d3a84c73c4f9ec80593e0e549
6819a79a856e12e8377180f12829fac101ddeee2954f72c68ed7cf89cd6a624503848a27bd9cb823
5eaae7253bf88656d5f6eca90ab56b015e521c34047a9c7cb73fb151e515ede9896733afe570c925
dd9aed328a1e31f9bedc42e3b40c4688ad17e0f41c231c03d26a5145cd6910db78cfe7a3e3a90cc8
89fb04e9b233702f429a576e9bdb31ad32dabda3cd1e155e210b93299e0d916cc0818fd330ae2e38
82a887e1d71ed8a63466e917b6dd6a88cad912f1830031091eb1783ae1fafd7f5a0df0fe6827bf6f
6df37b8f1676d51b0d6d1b0a92265843e65b1718f586272566385ab84004a6d1a5f83be6dbe1f931
be4c2bed09fffa96b204c34c9f2fcf0b3b0e40ff04d0359024046615115c3e7eaff3ca6291ec0dd0
8ef27caa7288d950c47f997b92d3ef22cd9327427340bf06fbb9898f5d7d63c6995b3e092e16f8fb
94a5a1d8b38e59fc0665e2b1b2db499f1f5e4e9a98313271b3a0a3bbc381ef4d788ff21a80b6c62b
11df08e900d87f52ce3934f34f2045bb8ed8d4e1361b5c25a68b9da8068ae6c14184b6584fbe02ea
cff64d8743857349b4be76b65e3039635a8595a5c6dbdeae3247c15c8ed20633a986a3e0846346e8
95443fa7e4b40c315ddb5418fd62fa69f80921c9eefe83cc81bec19ef38edd77d5602b0a1f43970c
4f6776c1ae2e7434f28d87ca1810061e3aa355b95af94d22c73d9ac293548d2e50e191980e53da03
e70016608690d036076b4f38961a34d2899a8b3bd6c76cfd95275e4973f0395ed5487610eb0b5c93
08145115b77723f1508dd6302cd949d80142702c522f0c441a62c518bbc599c35839dc79b48c8150
4eb3bb149c42cea1c8c8200a7e84d8203d26adba2f393a7909c7108ddf7e1d1998f7df5da8bfa657
dfb380f6d75fee0ee993635e6030d5562cbb49ca590636918d3853e6a6e85b13e0f0765cebf0dcd1
0e54ad1f7221ba121affed2c09b12ed687819299fa2c201294564e4b0af1644d60b2f00d6326cde4
886929001e1a3c55c67d3d998f33b3b7207011009bbc00a740c0f53b7fca0726e787b805f31477c5
20b44194a659b4dbd4f04923ea4d716c126b5d90f7470029a76fb2f8e0294e8a8c00fe9dbc0b7bcf
75ad2f42f6278e895e526879e2a623ccf87dbbcf09161c0297d4bc1f7543ef7b5225eb5be7595437
ad33381ff3abe6eb1a2b50c0ca3aee6fc2fc6eb65124db472c283fb5473e8c2119f6364e1a531d6a
ce9a01816364edb1e085f3dd00b90b37c3be166b4e3ebbe9e8b15c8af895c9a2e49d3d4c48d182d0
d67dd096bc1d371c269386fb133e30da28902d2c5aedc4b245dc71ebc60255817e1072750a427bef
b4398d5c2434ab302cfd4f94d95e8e536dfe2b4bea8cf30a5cb6314243aa9ddbe23122f7cf032024
7ecec38675f06684beab2715adc00e90d354142270f5737ef7ac485d21c0c4fc44538232db6975d1
2af1a62e446463655c13279cccdadeef680d926409b813741a719f13f218beae2bda2cd8bf7ced00
813334036ca12b868eb5c051e002035b08ae195705d159516218de1a47420406f352125efbe90e80
fc98a36e65d0fe78ff86d939eeb803ce76ed3984e3fd30a1480e6cf9196ce305f405f38e5b015ab7
87a1dc9ed512033735f48a6f8b41bf5d1118595040e83efabb2fdd19fd0aa8a172f4a18f5dcb4d42
7f7d2ce0360be4f0c1a1a41b92019f8575e9d14ffaa4a5e1d8e1bdc7193284eabc3debba617635db
5ed003aa6fff6eb168a0f96afff8eca901a310cfd76014c74cf0232ab38abe66560e64b4e04ae36c
040cfcacb729a78b8fa11e588f5d6e1b286814a76efdeace94f84bd12614fb757651e5bf4f13ba45
2be6ac59a7f2987b3c17297275a1f0f1c3e19b2c571b7206ee59704f844b26a8f9d1a4edca974da9
447ce218f3b20e4d8db4bf96a72bff62163b6102e27119d0e620ca13923b1a0555379802858a173e
89306b396c3e66230da029f5a424c0ad7aeb0541a57ddbab6618a37644ae19f4d95555dda729f51a
214e01afbf82c4743d2ab4e6cb2a1e65e35497fd2f9d6bc60d13808f6bd2b25d59df8ad5f8833395
572be4870429cf94e714be4ae8fc161dae57794a7c700ab639a20f6dc3ea51304dfb17c89a9d7414
deb987685263f812a3afb1ab1945847b4c91cc78ef76982459ae81d823fae3e697f25e13fcfc128b
d00af3da730d00d6ade2b519de806b4455ac417f00b731d3d91107e651c076066ed8bcba175ec4b2
c16278f2f5b6646667eee635bb9cbd0684645cb6652d568f6f71f13776d87da2b600353f28cf2e07
49f8cd544879601161ac8e6b76fdca442a69677a2ff4063154b25e0d713e7ef955a0d5667605924e
65bb4fd2b70f3c2cd62d46711cc935f9ec2ea8e856b9dfe1ae3b31b9614c4c251891bdba933b8ad1
e4f8f921c386c35ace0dc8d54b41f38d5bd634f018305a46f29dfeeff5bb251291432021bd569e12
d2eab97a10ccfeb719e5ace246e54c0218135749a7b75ea50b3aaf415c53541be7977d5d60bd0a87
f50b359487b866555df26ec3a2a547fa7c0834af2eafdd07786a7946af9f7a0a8bdbc79eb7ada0b1
e8fb900528f5c3f31ef6e356abb32e13f7eef7790d89cc2df4948caaf0281bf4db45bf32dc1ca16f
6b96610edd9da2d3a6d41fff34133944a61a10ff6aa225e35d0cb0ac80f11201ffbbbbd03b6b03e4
be61eef6eae340b273b6e0ab0e9738e545f64dd2de2cda06ca64aa9f79533ba8641eb01459b88506
a86c5da8cd75226660ae1879566b3463541247939a2000d175d209ca96e47792c4afa3cb1709b452
36baa798a3145aa73f9f96d18800d9aad16716d0c634e5ecd3780cb244d2d7a2345f8380651457b6
669abc29d78691fa680f6e468268cd027893a21e8d28f98b591d963f31768d4e83d22ea1d963b9c3
874f441ee75a6b57e0c897b1e98d86bc588cc0e1322d72dd3df71fe592c9619b2fc45abbb6fa5304
741e137770cc78cc5d5cdc1fc3a2dd3d1247c2d6a6bb5dc20b0d9961379e1d9aa006569be87199e5
dbd75614487cc462c6877f7ef6a9cd45536604eabd60b09bcc58b323d479803f83ba027b1566d4ea
577c4fe48958113745fb5d512ca7815bcd2ad8ac85f7e6dae15a631449d5aba55e5c73b3334b2073
2f1b9e1895079f5a04224217f91f3d8237a1823e0d6b4d0b4448e36908dfc2d78860d67d701d8686
af5e9e34c38acd8825f3e5c53481d372b7d553def6e34957a7b13be49117cab5bb58762220d65679
4e57eb8231d8467a86d21a5aa8b2b9e2
#END



#BEGIN DEVICE
	@LocalIOMaster, 12, 27
	@RamFS, 1, 1
	@SDCardFS, 25, 1
	@UserLog, 7, 11
	@IntEthernet, 4, 2
	@DMLogger, 5, 10
	@IntModTCPClient, 9, 14, 1000, 2, 60
	@IntEIPClient, 22, 31, 1000, 2, 60
	@IntEthDMPPClient, 23, 32, 50, 250, 2
	@IntSerial, 10, 15
	@POM, 24, 33
	@Axis0, 30, 35
	@Axis1, 31, 35
	@Axis2, 32, 35
	@Axis3, 33, 35
	@EthIOMaster, 13, 27
	@HSIO_005_Axis0, 28673, 35
	@HSIO_005_Axis1, 29697, 35
	@HSIO_005_Axis2, 30721, 35
	@HSIO_005_Axis3, 31745, 35
	@HSIO_006_Axis0, 28674, 35
	@HSIO_006_Axis1, 29698, 35
	@HSIO_006_Axis2, 30722, 35
	@HSIO_006_Axis3, 31746, 35
	@HSIO_005A_Axis0, 28675, 35
	@HSIO_005A_Axis1, 29699, 35
	@HSIO_005A_Axis2, 30723, 35
	@HSIO_005A_Axis3, 31747, 35
	@HBW_PWM_M1, 24579, 34
	@HBW_PWM_M2, 25603, 34
	@PWMOut1, 26, 34
	@HBW_PWM_M3, 26627, 34
	@HBW_PWM_M4, 27651, 34
	@VGR_PWM_M1, 24577, 34
	@VGR_PWM_M2, 25601, 34
	@VGR_PWM_M3, 26625, 34
	@MPO_PWM_M5, 27649, 34
	@HBW_Encoder_X, 14, 29
	@HBW_Encoder_Z, 15, 29
	@VGR_Encoder_Y, 16387, 29
	@VGR_Encoder_X, 17411, 29
	@VGR_Encoder_Rot, 18435, 29
#END

#BEGIN MEM_CONFIG
	X	BIT	decimal	2048	-1
	Y	BIT	decimal	2048	-1
	WX	SWORD	decimal	256	-1
	WY	SWORD	decimal	256	-1
	C	BIT	decimal	2048	0 2015
	V	UWORD	decimal	4096
	N	SWORD	decimal	4096
	D	SDWORD	decimal	4096
	R	REAL	decimal	4096
	T	TIMER	decimal	256
	CT	COUNTER	decimal	256
	SS	STRING	decimal	128
	SL	STRING	decimal	64
	UDT	DATETIME	decimal	32
	PL	UWORD	decimal	256
	DLX	BIT	octal	01000	-1
	DLY	BIT	octal	01000	-1
	DLC	BIT	octal	01000
	DLV	UWORD	octal	04000
	MI	BIT	decimal	1024
	MC	BIT	decimal	1024
	MIR	SWORD	decimal	2048
	MHR	SWORD	decimal	2048
	RX	REAL	decimal	256	-1
	RY	REAL	decimal	256	-1
	MSG	STRING		0
	ERR	STRING		0
	SysName	STRING		0
	SysDesc	STRING		0
	SerialNum	STRING		0
	PartNum	STRING		0
	HBW_Program	PROGRAM		0	-1
	VGR_Program	PROGRAM		0	-1
	VGR_Copy_State	<Virtual>		0
	VGR_Suction	<Virtual>		0
	MPO_Program	PROGRAM		0	-1
	MPO_Suction	<Virtual>		0
	MPO_Copy_State	<Virtual>		0
	SLD_Program	PROGRAM		0	-1
	SLD_Copy_State	<Virtual>		0
	SLD_Suction	<Virtual>		0
	SSC_Program	PROGRAM		0	-1
	SSC_Copy_State	<Virtual>		0
	HBW_Pick	TASK		0	-1
	HBW_Copy_State	<Virtual>		0
	PID_10	PID		0
	PID_11	PID		0
	MPO_Manual	<Virtual>		0
#END

// Beginning of Code Block VGR_Copy_State
$LGCMOD	VGR_Copy_State

// Rung VGR_Copy_State#1
// Offset 0
#BEGIN FMT_COMMENT 
"VGR Program"
#END

STR	ST1
COPY	0x1	"4 0x0 MC410 C410 1 0x0 MC409 C409 1 0x0 MC412 Y28 1 0x0 MC412 MC450 1 0x0 MC411 C411 1 0x0 MC408 C408 1 0x0 MC406 C406 1 0x0 MC407 C407 1 0x0 MC413 Y29 1 0x0 MC413 MC451 1 0x0 X27 MI200 1 0x0 X26 MI454 1 0x0 X25 MI453 1 0x0 MC452 C452 1"

// Rung VGR_Copy_State#2
// Offset 33
NOP

// Rung VGR_Copy_State#3
// Offset 34
RET

// End of Code Block VGR_Copy_State
$LGCEND	VGR_Copy_State

// Beginning of Code Block VGR_Suction
$LGCMOD	VGR_Suction

// Rung VGR_Suction#1
// Offset 0
STR	ST1
OUT	Y29

// Rung VGR_Suction#2
// Offset 2
RET

// End of Code Block VGR_Suction
$LGCEND	VGR_Suction

// Beginning of Code Block MPO_Suction
$LGCMOD	MPO_Suction

// Rung MPO_Suction#1
// Offset 0
#BEGIN FMT_COMMENT 
"Enable the vaccum and turn on the valve to hold suction "
"when we are inisde and in the oven reset stage of MPO "
"Program."
#END

STR	MPO_Program.S1
ANDN	X18
STR	MPO_Program.S4
ANDN	X17
ORSTR
STR	MPO_Program.S10
ANDN	X18
ORSTR
OR	MPO_Program.S8
OR	MPO_Program.S13
OR	MPO_Program.S9
OR	MPO_Program.S11
AND	C2000
OUT	Y17

// Rung MPO_Suction#2
// Offset 14
NOP

// Rung MPO_Suction#3
// Offset 15
STR	MPO_Program.S1
ANDN	X18
STR	MPO_Program.S4
ANDN	X17
ORSTR
STR	MPO_Program.S10
ANDN	X18
ORSTR
AND	C2000
AND	Y17
OUT	Y20

// Rung MPO_Suction#4
// Offset 26
NOP

// Rung MPO_Suction#5
// Offset 27
RET

// Rung MPO_Suction#6
// Offset 28
NOP

// End of Code Block MPO_Suction
$LGCEND	MPO_Suction

// Beginning of Code Block MPO_Copy_State
$LGCMOD	MPO_Copy_State

// Rung MPO_Copy_State#1
// Offset 0
RET

// End of Code Block MPO_Copy_State
$LGCEND	MPO_Copy_State

// Beginning of Code Block SLD_Copy_State
$LGCMOD	SLD_Copy_State

// Rung SLD_Copy_State#1
// Offset 0
STR	ST1
COPY	0x1	"4 0x0 MC800 C1616 1 0x0 MC801 C1617 1 0x0 MC802 C1618 1 0x0 MC803 C1619 1 0x0 MC804 C1620 1 0x0 Y31 MI800 1 0x0 MC850 C1621 1 0x0 MC851 C1626 1 0x0 MC111 C1666 1"

// Rung SLD_Copy_State#2
// Offset 23
RET

// Rung SLD_Copy_State#3
// Offset 24
NOP

// End of Code Block SLD_Copy_State
$LGCEND	SLD_Copy_State

// Beginning of Code Block SLD_Suction
$LGCMOD	SLD_Suction

// Rung SLD_Suction#1
// Offset 0
NOP

// Rung SLD_Suction#2
// Offset 1
RET

// End of Code Block SLD_Suction
$LGCEND	SLD_Suction

// Beginning of Code Block MPO_Manual
$LGCMOD	MPO_Manual

// Rung MPO_Manual#1
// Offset 0
RET

// Rung MPO_Manual#2
// Offset 1
NOP

// Rung MPO_Manual#3
// Offset 2
NOP

// End of Code Block MPO_Manual
$LGCEND	MPO_Manual

// Beginning of Code Block SSC_Copy_State
$LGCMOD	SSC_Copy_State

// Rung SSC_Copy_State#1
// Offset 0
NOP

// Rung SSC_Copy_State#2
// Offset 1
RET

// End of Code Block SSC_Copy_State
$LGCEND	SSC_Copy_State

// Beginning of Code Block HBW_Copy_State
$LGCMOD	HBW_Copy_State

// Rung HBW_Copy_State#1
// Offset 0
COPY	0x1	"4 0x0 X0 MI200 1 0x0 X1 MI201 1 0x0 X2 MI202 1 0x0 X3 MI203 1 0x0 X4 MI204 1 0x0 X10 MI210 1 0x0 X11 MI211 1 0x0 MC5 C5 1 0x0 MC6 C6 1 0x0 MC110 C110 1 0x0 MC111 C111 1 0x0 MC112 C112 1 0x0 MC113 C113 1 0x0 MC114 C114 1 0x0 MC115 C115 1 0x0 MC116 C116 1"

// Rung HBW_Copy_State#2
// Offset 36
RET

// End of Code Block HBW_Copy_State
$LGCEND	HBW_Copy_State

// Beginning of Code Block $Main
$PRGRM	$Main

// Rung $Main#1
// Offset 0
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2022 Project For CS 404/504, ME404/504 "
"PLC Programming for Automation<br>Date 10/19/22"
#END

STR	ST1
CALL	HBW_Copy_State	0x1	DST511	"3"	"3"

// Rung $Main#2
// Offset 8
#BEGIN FMT_COMMENT 
"Mini Factory Fall 2022 Project For CS 404/504, ME404/504 "
"PLC Programming for Automation<br>Date 10/19/22"
#END

STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung $Main#3
// Offset 16
#BEGIN FMT_COMMENT 
"Run HBW_Program"
#END

STR	ST1
RUN	HBW_Program

// Rung $Main#4
// Offset 19
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR	ST1
RUN	VGR_Program

// Rung $Main#5
// Offset 22
#BEGIN FMT_COMMENT 
"Run MPO_Program"
#END

STR	ST1
RUN	MPO_Program

// Rung $Main#6
// Offset 25
#BEGIN FMT_COMMENT 
"Run SSC_Program"
#END

STR	ST1
RUN	SSC_Program

// Rung $Main#7
// Offset 28
#BEGIN FMT_COMMENT 
"Run SLD_Program"
#END

STR	ST1
RUN	SLD_Program

// Rung $Main#8
// Offset 31
#BEGIN FMT_COMMENT 
"Run VGR_Program"
#END

STR	ST1
RUN	VGR_Program

// Rung $Main#9
// Offset 34
NOP

// End of Code Block $Main
$PGMEND	$Main

// Beginning of Code Block HBW_Program
$PRGRM	HBW_Program

// Rung HBW_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"HBW Program"
#END

SG	HBW_Program.S0

// Rung HBW_Program#2
// Offset 2
#BEGIN FMT_COMMENT 
"testkat<br>"
#END

STR	ST0
JMP	HBW_Program.S1

// Rung HBW_Program#3
// Offset 4
#BEGIN FMT_COMMENT 
"ESTOP"
#END

STR	C6
JMP	HBW_Program.S13

// Rung HBW_Program#4
// Offset 6
STR	C110
JMP	HBW_Program.S2

// Rung HBW_Program#5
// Offset 8
STR	C111
JMP	HBW_Program.S3

// Rung HBW_Program#6
// Offset 10
STR	C112
JMP	HBW_Program.S4

// Rung HBW_Program#7
// Offset 12
STR	C113
JMP	HBW_Program.S5

// Rung HBW_Program#8
// Offset 14
STR	C114
JMP	HBW_Program.S6

// Rung HBW_Program#9
// Offset 16
STR	C115
JMP	HBW_Program.S7

// Rung HBW_Program#10
// Offset 18
STR	C116
JMP	HBW_Program.S8

// Rung HBW_Program#11
// Offset 20
STR	C117
JMP	HBW_Program.S9

// Rung HBW_Program#12
// Offset 22
#BEGIN FMT_COMMENT 
"Jump To Auto"
#END

STR	C5
JMP	HBW_Program.S10

// Rung HBW_Program#13
// Offset 24
HSCNT	@HBW_Encoder_X	$HBW_Encoder_X	X9	X8	X0	ST1023	ST1023	DST511

// Rung HBW_Program#14
// Offset 35
HSCNT	@HBW_Encoder_Z	$HBW_Encoder_Z	X6	X7	X3	ST1023	ST1023	DST511

// Rung HBW_Program#15
// Offset 46
#BEGIN FMT_COMMENT 
"ESTOP MODE"
#END

SG	HBW_Program.S13

// Rung HBW_Program#16
// Offset 48
STRN	C6
JMP	HBW_Program.S0

// Rung HBW_Program#17
// Offset 50
#BEGIN FMT_COMMENT 
"AUTO MODE"
#END

SG	HBW_Program.S10

// Rung HBW_Program#18
// Offset 52
#BEGIN FMT_COMMENT 
"Move To Rack Pos<br>"
#END

STR	ST1
ANDLT	$HBW_Encoder_X.Acc	7564
PWMOUT	@HBW_PWM_M2	$HBW_PWM_M2	Y81	200	50
OUT	Y50

// Rung HBW_Program#19
// Offset 72
STR	ST1
ANDLT	$HBW_Encoder_Z.Acc	3187
PWMOUT	@HBW_PWM_M3	$HBW_PWM_M3	Y82	200	50
OUT	Y4

// Rung HBW_Program#20
// Offset 92
STRGE	$HBW_Encoder_X.Acc	7564
ANDGE	$HBW_Encoder_Z.Acc	3187
JMP	HBW_Program.S12

// Rung HBW_Program#21
// Offset 101
#BEGIN FMT_COMMENT 
"In Position, Move Cantever In"
#END

SG	HBW_Program.S12

// Rung HBW_Program#22
// Offset 103
STR	ST1
ANDN	X10
PWMOUT	@HBW_PWM_M4	$HBW_PWM_M4	Y83	200	50
OUT	Y6

// Rung HBW_Program#23
// Offset 120
STR	X10
JMP	HBW_Program.S14

// Rung HBW_Program#24
// Offset 122
#BEGIN FMT_COMMENT 
"Lift Pallet"
#END

SG	HBW_Program.S14

// Rung HBW_Program#25
// Offset 124
STR	ST1
ANDGT	$HBW_Encoder_Z.Acc	3000
PWMOUT	@HBW_PWM_M3	$HBW_PWM_M3	Y82	200	50
OUT	Y5

// Rung HBW_Program#26
// Offset 144
STRLE	$HBW_Encoder_Z.Acc	3000
JMP	HBW_Program.S15

// Rung HBW_Program#27
// Offset 149
#BEGIN FMT_COMMENT 
"Retract"
#END

SG	HBW_Program.S15

// Rung HBW_Program#28
// Offset 151
STR	ST1
ANDN	X11
PWMOUT	@HBW_PWM_M4	$HBW_PWM_M4	Y83	200	50
OUT	Y7

// Rung HBW_Program#29
// Offset 168
STR	X11
JMP	HBW_Program.S0

// Rung HBW_Program#30
// Offset 170
#BEGIN FMT_COMMENT 
"RESET STAGE"
#END

SG	HBW_Program.S1

// Rung HBW_Program#31
// Offset 172
STR	ST1
ANDN	X11
PWMOUT	@HBW_PWM_M4	$HBW_PWM_M4	Y83	200	50
OUT	Y7

// Rung HBW_Program#32
// Offset 189
STR	X11
SET	C2

// Rung HBW_Program#33
// Offset 191
STR	C2
ANDN	X3
PWMOUT	@HBW_PWM_M3	$HBW_PWM_M3	Y82	200	50
OUT	Y5

// Rung HBW_Program#34
// Offset 208
STR	C2
ANDN	X0
PWMOUT	@HBW_PWM_M2	$HBW_PWM_M2	Y81	200	50
OUT	Y51

// Rung HBW_Program#35
// Offset 225
STR	X0
AND	X3
RST	C2
RSTCT	CT1
RSTCT	CT2
RSTCT	CT3
JMP	HBW_Program.S0

// Rung HBW_Program#36
// Offset 232
SG	HBW_Program.S11

// Rung HBW_Program#37
// Offset 234
STR	ST1
ANDPDPF
OUT	C405

// Rung HBW_Program#38
// Offset 237
STRN	CT0.Done
OUT	Y4

// Rung HBW_Program#39
// Offset 239
STR	X6
ANDN	CT0.Done
STR	C405
CNT	CT0	V400

// Rung HBW_Program#40
// Offset 244
STR	ST1
PWMOUT	@HBW_PWM_M3	$HBW_PWM_M3	Y82	200	50

// Rung HBW_Program#41
// Offset 259
STR	CT0.Done
JMP	HBW_Program.S0

// Rung HBW_Program#42
// Offset 261
#BEGIN FMT_COMMENT 
"CANTELEVER IN"
#END

SG	HBW_Program.S2

// Rung HBW_Program#43
// Offset 263
STR	ST1
PWMOUT	@HBW_PWM_M4	$HBW_PWM_M4	Y83	200	50

// Rung HBW_Program#44
// Offset 278
STRN	X10
OUT	Y6

// Rung HBW_Program#45
// Offset 280
STR	X10
ORND	C110
JMP	HBW_Program.S0

// Rung HBW_Program#46
// Offset 284
#BEGIN FMT_COMMENT 
"CANTELEVER OUT<br>"
#END

SG	HBW_Program.S3

// Rung HBW_Program#47
// Offset 286
STR	ST1
PWMOUT	@HBW_PWM_M4	$HBW_PWM_M4	Y83	200	50

// Rung HBW_Program#48
// Offset 301
STRN	X11
OUT	Y7

// Rung HBW_Program#49
// Offset 303
STR	X11
ORND	C111
JMP	HBW_Program.S0

// Rung HBW_Program#50
// Offset 307
SG	HBW_Program.S4

// Rung HBW_Program#51
// Offset 309
STR	ST1
PWMOUT	@HBW_PWM_M2	$HBW_PWM_M2	Y81	200	50

// Rung HBW_Program#52
// Offset 324
STRN	X0
OUT	Y51

// Rung HBW_Program#53
// Offset 326
STR	X0
ORND	C112
JMP	HBW_Program.S0

// Rung HBW_Program#54
// Offset 330
SG	HBW_Program.S5

// Rung HBW_Program#55
// Offset 332
STR	ST1
PWMOUT	@HBW_PWM_M2	$HBW_PWM_M2	Y81	200	50

// Rung HBW_Program#56
// Offset 347
STR	ST1
OUT	Y50

// Rung HBW_Program#57
// Offset 349
STRND	C113
JMP	HBW_Program.S0

// Rung HBW_Program#58
// Offset 352
SG	HBW_Program.S6

// Rung HBW_Program#59
// Offset 354
STR	ST1
PWMOUT	@HBW_PWM_M3	$HBW_PWM_M3	Y82	200	50

// Rung HBW_Program#60
// Offset 369
STRN	X3
OUT	Y5

// Rung HBW_Program#61
// Offset 371
STRND	C114
OR	X3
JMP	HBW_Program.S0

// Rung HBW_Program#62
// Offset 375
SG	HBW_Program.S7

// Rung HBW_Program#63
// Offset 377
STR	ST1
PWMOUT	@HBW_PWM_M3	$HBW_PWM_M3	Y82	200	50

// Rung HBW_Program#64
// Offset 392
STR	ST1
OUT	Y4

// Rung HBW_Program#65
// Offset 394
STRND	C115
JMP	HBW_Program.S0

// Rung HBW_Program#66
// Offset 397
SG	HBW_Program.S8

// Rung HBW_Program#67
// Offset 399
STR	ST1
PWMOUT	@HBW_PWM_M1	$HBW_PWM_M1	Y80	200	50

// Rung HBW_Program#68
// Offset 414
STR	ST1
OUT	Y48

// Rung HBW_Program#69
// Offset 416
STRND	C116
JMP	HBW_Program.S0

// Rung HBW_Program#70
// Offset 419
SG	HBW_Program.S9

// Rung HBW_Program#71
// Offset 421
STR	ST1
PWMOUT	@HBW_PWM_M1	$HBW_PWM_M1	Y80	200	50

// Rung HBW_Program#72
// Offset 436
STR	ST1
OUT	Y49

// Rung HBW_Program#73
// Offset 438
STRND	C117
JMP	HBW_Program.S0

// End of Code Block HBW_Program
$PGMEND	HBW_Program

// Beginning of Code Block VGR_Program
$PRGRM	VGR_Program

// Rung VGR_Program#1
// Offset 0
SG	VGR_Program.S0

// Rung VGR_Program#2
// Offset 2
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#3
// Offset 10
STR	ST1
DUPBOOL
STR	C410
ANDN	C409
STRN	C410
AND	C409
ORSTR
ANDSTR
PWMOUT	@VGR_PWM_M3	$VGR_PWM_M3	Y90	500	100
POPBOOL
DUPBOOL
AND	C410
OUT	Y27
POPBOOL
AND	C409
OUT	Y26

// Rung VGR_Program#4
// Offset 39
STR	ST1
DUPBOOL
STR	C408
ANDN	C411
STRN	C408
AND	C411
ORSTR
ANDSTR
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
POPBOOL
DUPBOOL
AND	C408
OUT	Y24
POPBOOL
AND	C411
OUT	Y25

// Rung VGR_Program#5
// Offset 68
STR	ST1
DUPBOOL
STR	C406
ANDN	C407
STRN	C406
AND	C407
ORSTR
ANDSTR
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
POPBOOL
DUPBOOL
AND	C406
OUT	Y23
POPBOOL
AND	C407
OUT	Y22

// Rung VGR_Program#6
// Offset 97
STR	C452
JMP	VGR_Program.S1

// Rung VGR_Program#7
// Offset 99
SG	VGR_Program.S1

// Rung VGR_Program#8
// Offset 101
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#9
// Offset 103
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#10
// Offset 111
STRN	X25
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
OUT	Y22

// Rung VGR_Program#11
// Offset 127
STRN	X26
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
OUT	Y24

// Rung VGR_Program#12
// Offset 143
STRN	X27
PWMOUT	@VGR_PWM_M3	$VGR_PWM_M3	Y90	500	100
OUT	Y26

// Rung VGR_Program#13
// Offset 159
STR	X27
OUT	$VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#14
// Offset 161
STR	X26
OUT	$VGR_Encoder_X.ResetLevel

// Rung VGR_Program#15
// Offset 163
STR	X25
OUT	$VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#16
// Offset 165
STR	X25
AND	X26
AND	X27
JMP	VGR_Program.S2

// Rung VGR_Program#17
// Offset 169
SG	VGR_Program.S2

// Rung VGR_Program#18
// Offset 171
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#19
// Offset 179
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#20
// Offset 181
STR	ST1
OUT	$VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#21
// Offset 183
STR	ST1
OUT	$VGR_Encoder_X.EnableCapture

// Rung VGR_Program#22
// Offset 185
STR	ST1
OUT	$VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#23
// Offset 187
STR	ST1
OUT	$VGR_Encoder_Rot.EnableCapture

// Rung VGR_Program#24
// Offset 189
STR	ST1
OUT	$VGR_Encoder_X.EnableCapture

// Rung VGR_Program#25
// Offset 191
STR	ST1
OUT	$VGR_Encoder_Y.EnableCapture

// Rung VGR_Program#26
// Offset 193
STRGE	5340	$VGR_Encoder_Rot.Acc
ANDGE	5360	$VGR_Encoder_Rot.Acc
PWMOUT	@VGR_PWM_M3	$VGR_PWM_M3	Y90	500	100
OUT	Y27

// Rung VGR_Program#27
// Offset 216
STRGE	725	$VGR_Encoder_X.Acc
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
OUT	Y25

// Rung VGR_Program#28
// Offset 235
STRN	X2
JMP	VGR_Program.S3

// Rung VGR_Program#29
// Offset 237
SG	VGR_Program.S3

// Rung VGR_Program#30
// Offset 239
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#31
// Offset 247
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#32
// Offset 249
STRGE	600	$VGR_Encoder_Y.Acc
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
OUT	Y23

// Rung VGR_Program#33
// Offset 268
STRGE	$VGR_Encoder_Y.Acc	600
JMP	VGR_Program.S4

// Rung VGR_Program#34
// Offset 273
SG	VGR_Program.S4

// Rung VGR_Program#35
// Offset 275
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#36
// Offset 283
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#37
// Offset 285
STR	ST1
OUT	Y28

// Rung VGR_Program#38
// Offset 287
STR	Y28
JMP	VGR_Program.S5

// Rung VGR_Program#39
// Offset 289
SG	VGR_Program.S5

// Rung VGR_Program#40
// Offset 291
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#41
// Offset 299
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#42
// Offset 301
STR	ST1
OUT	Y28

// Rung VGR_Program#43
// Offset 303
STR	ST1
OUT	Y29

// Rung VGR_Program#44
// Offset 305
STR	Y29
JMP	VGR_Program.S6

// Rung VGR_Program#45
// Offset 307
SG	VGR_Program.S6

// Rung VGR_Program#46
// Offset 309
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#47
// Offset 317
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#48
// Offset 319
STR	ST1
OUT	Y28
OUT	Y29

// Rung VGR_Program#49
// Offset 322
STRN	X25
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
OUT	Y22

// Rung VGR_Program#50
// Offset 338
STR	X25
JMP	VGR_Program.S7

// Rung VGR_Program#51
// Offset 340
SG	VGR_Program.S7

// Rung VGR_Program#52
// Offset 342
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#53
// Offset 350
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#54
// Offset 352
STR	ST1
OUT	Y28
OUT	Y29

// Rung VGR_Program#55
// Offset 355
STR	ST1
MOVE	1	C299

// Rung VGR_Program#56
// Offset 358
STRN	X26
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
OUT	Y24

// Rung VGR_Program#57
// Offset 374
STR	X26
JMP	VGR_Program.S8

// Rung VGR_Program#58
// Offset 376
SG	VGR_Program.S8

// Rung VGR_Program#59
// Offset 378
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#60
// Offset 386
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#61
// Offset 388
STR	ST1
OUT	Y28
OUT	Y29

// Rung VGR_Program#62
// Offset 391
STRN	X27
ANDGE	$VGR_Encoder_Rot.Acc	3567
ANDGE	$VGR_Encoder_Rot.Acc	3557
PWMOUT	@VGR_PWM_M3	$VGR_PWM_M3	Y90	500	100
OUT	Y26

// Rung VGR_Program#63
// Offset 415
STRGE	3404	$VGR_Encoder_X.Acc
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
OUT	Y25

// Rung VGR_Program#64
// Offset 434
STRGE	$VGR_Encoder_X.Acc	3404
JMP	VGR_Program.S9

// Rung VGR_Program#65
// Offset 439
SG	VGR_Program.S9

// Rung VGR_Program#66
// Offset 441
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#67
// Offset 449
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#68
// Offset 451
STR	ST1
OUT	Y28
OUT	Y29

// Rung VGR_Program#69
// Offset 454
STRGE	2026	$VGR_Encoder_Y.Acc
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
OUT	Y23

// Rung VGR_Program#70
// Offset 473
STRGE	$VGR_Encoder_Y.Acc	2026
JMP	VGR_Program.S10

// Rung VGR_Program#71
// Offset 478
SG	VGR_Program.S10

// Rung VGR_Program#72
// Offset 480
STR	ST1
CALL	VGR_Copy_State	0x1	DST511	"3"	"3"

// Rung VGR_Program#73
// Offset 488
STRN	C452
JMP	VGR_Program.S0

// Rung VGR_Program#74
// Offset 490
STR	ST2
OUT	Y29

// Rung VGR_Program#75
// Offset 492
STRN	X25
ANDN	Y29
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
OUT	Y22

// Rung VGR_Program#76
// Offset 509
STRN	X26
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
OUT	Y24

// Rung VGR_Program#77
// Offset 525
STR	ST2
JMP	VGR_Program.S11

// Rung VGR_Program#78
// Offset 527
STR	X25
AND	X26
JMP	VGR_Program.S2

// Rung VGR_Program#79
// Offset 530
SG	VGR_Program.S11

// Rung VGR_Program#80
// Offset 532
STRN	X25
PWMOUT	@VGR_PWM_M1	$VGR_PWM_M1	Y88	500	100
OUT	Y22

// Rung VGR_Program#81
// Offset 548
STRN	X26
PWMOUT	@VGR_PWM_M2	$VGR_PWM_M2	Y89	500	100
OUT	Y24

// Rung VGR_Program#82
// Offset 564
STRN	X27
PWMOUT	@VGR_PWM_M3	$VGR_PWM_M3	Y90	500	100
OUT	Y26

// Rung VGR_Program#83
// Offset 580
STR	X27
OUT	$VGR_Encoder_Rot.ResetLevel

// Rung VGR_Program#84
// Offset 582
STR	X26
OUT	$VGR_Encoder_X.ResetLevel

// Rung VGR_Program#85
// Offset 584
STR	X25
OUT	$VGR_Encoder_Y.ResetLevel

// Rung VGR_Program#86
// Offset 586
STR	ST1
MOVE	1	C700

// Rung VGR_Program#87
// Offset 589
NOP

// End of Code Block VGR_Program
$PGMEND	VGR_Program

// Beginning of Code Block MPO_Program
$PRGRM	MPO_Program

// Rung MPO_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"MPO Program"
#END

NOP

// End of Code Block MPO_Program
$PGMEND	MPO_Program

// Beginning of Code Block SLD_Program
$PRGRM	SLD_Program

// Rung SLD_Program#1
// Offset 0
SG	SLD_Program.S0

// Rung SLD_Program#2
// Offset 2
STR	ST1
CALL	SLD_Copy_State	0x1	DST511	"3"	"3"

// Rung SLD_Program#3
// Offset 10
STR	C1616
OUT	Y30

// Rung SLD_Program#4
// Offset 12
STR	C1617
OUT	Y31

// Rung SLD_Program#5
// Offset 14
STR	C1618
OUT	Y32

// Rung SLD_Program#6
// Offset 16
STR	C1619
OUT	Y33

// Rung SLD_Program#7
// Offset 18
STR	C1620
OUT	Y34

// Rung SLD_Program#8
// Offset 20
STR	C1621
JMP	SLD_Program.S1

// Rung SLD_Program#9
// Offset 22
SG	SLD_Program.S1

// Rung SLD_Program#10
// Offset 24
STR	C1666
JMP	SLD_Program.S0

// Rung SLD_Program#11
// Offset 26
STR	ST1
CALL	SLD_Copy_State	0x1	DST511	"3"	"3"

// Rung SLD_Program#12
// Offset 34
STRN	C1621
JMP	SLD_Program.S0

// Rung SLD_Program#13
// Offset 36
STRN	X35
OFFDTMR	T200	1750	C1622

// Rung SLD_Program#14
// Offset 40
STR	C1622
OUT	Y30

// Rung SLD_Program#15
// Offset 42
STRND	Y30
JMP	SLD_Program.S2

// Rung SLD_Program#16
// Offset 45
STR	C1626
OUT	Y47

// Rung SLD_Program#17
// Offset 47
SG	SLD_Program.S2

// Rung SLD_Program#18
// Offset 49
STR	C1666
JMP	SLD_Program.S0

// Rung SLD_Program#19
// Offset 51
STR	C1626
OUT	Y47

// Rung SLD_Program#20
// Offset 53
STR	ST1
CALL	SLD_Copy_State	0x1	DST511	"3"	"3"

// Rung SLD_Program#21
// Offset 61
STRN	C1621
JMP	SLD_Program.S0

// Rung SLD_Program#22
// Offset 63
STR	ST1
MOVE	WX0	V3216

// Rung SLD_Program#23
// Offset 66
STRLE	WX0	13333
JMP	SLD_Program.S3

// Rung SLD_Program#24
// Offset 71
STRGE	WX0	16000
ANDLE	WX0	20999
JMP	SLD_Program.S4

// Rung SLD_Program#25
// Offset 80
STRGE	WX0	21000
ANDLE	WX0	24000
JMP	SLD_Program.S5

// Rung SLD_Program#26
// Offset 89
STRGE	WX0	24001
JMP	SLD_Program.S1

// Rung SLD_Program#27
// Offset 94
SG	SLD_Program.S3

// Rung SLD_Program#28
// Offset 96
STR	C1666
JMP	SLD_Program.S0

// Rung SLD_Program#29
// Offset 98
STR	ST1
CALL	SLD_Copy_State	0x1	DST511	"3"	"3"

// Rung SLD_Program#30
// Offset 106
STR	ST1
OUT	Y31

// Rung SLD_Program#31
// Offset 108
STR	Y31
TMR	T216	1900

// Rung SLD_Program#32
// Offset 111
STR	T216.Timing
ANDN	T216.Done
OUT	Y30

// Rung SLD_Program#33
// Offset 114
STR	T216.Done
OUT	Y32

// Rung SLD_Program#34
// Offset 116
STRN	C1621
JMP	SLD_Program.S0

// Rung SLD_Program#35
// Offset 118
STR	Y32
ONDTMR	T217	125	C1623

// Rung SLD_Program#36
// Offset 122
STR	C1623
JMP	SLD_Program.S1

// Rung SLD_Program#37
// Offset 124
SG	SLD_Program.S4

// Rung SLD_Program#38
// Offset 126
STR	C1666
JMP	SLD_Program.S0

// Rung SLD_Program#39
// Offset 128
STR	ST1
CALL	SLD_Copy_State	0x1	DST511	"3"	"3"

// Rung SLD_Program#40
// Offset 136
STR	ST1
OUT	Y31

// Rung SLD_Program#41
// Offset 138
STR	Y31
TMR	T218	2850

// Rung SLD_Program#42
// Offset 141
STR	T218.Timing
ANDN	T218.Done
OUT	Y30

// Rung SLD_Program#43
// Offset 144
STR	T218.Done
OUT	Y33

// Rung SLD_Program#44
// Offset 146
STR	Y33
ONDTMR	T219	125	C1624

// Rung SLD_Program#45
// Offset 150
STR	C1624
JMP	SLD_Program.S1

// Rung SLD_Program#46
// Offset 152
STRN	C1621
JMP	SLD_Program.S0

// Rung SLD_Program#47
// Offset 154
SG	SLD_Program.S5

// Rung SLD_Program#48
// Offset 156
STR	C1666
JMP	SLD_Program.S0

// Rung SLD_Program#49
// Offset 158
STR	ST1
CALL	SLD_Copy_State	0x1	DST511	"3"	"3"

// Rung SLD_Program#50
// Offset 166
STR	ST1
OUT	Y31

// Rung SLD_Program#51
// Offset 168
STR	Y31
TMR	T220	3800

// Rung SLD_Program#52
// Offset 171
STR	T220.Timing
ANDN	T220.Done
OUT	Y30

// Rung SLD_Program#53
// Offset 174
STR	T220.Done
OUT	Y34

// Rung SLD_Program#54
// Offset 176
STR	Y34
ONDTMR	T221	125	C1625

// Rung SLD_Program#55
// Offset 180
STR	C1625
JMP	SLD_Program.S1

// Rung SLD_Program#56
// Offset 182
STRN	C1621
JMP	SLD_Program.S0

// End of Code Block SLD_Program
$PGMEND	SLD_Program

// Beginning of Code Block SSC_Program
$PRGRM	SSC_Program

// Rung SSC_Program#1
// Offset 0
#BEGIN FMT_COMMENT 
"SSC Program"
#END

NOP

// End of Code Block SSC_Program
$PGMEND	SSC_Program

#BEGIN ELEMENT_DOC
"X0","FLAGS = REST_READONLY","HBW_I1","","HBW - I1 = Reference switch horizontal axis -  IX_HBW_RefSwitchHor izontalAxis_I1"
"X1","FLAGS = REST_READONLY","HBW_I2","","HBW - I2 = Light barrier inside -  IX_HBW_LightBarrierIn side_I2"
"X2","FLAGS = REST_READONLY","HBW_I3","","HBW - I3 = Light barrier outside -  IX_HBW_LightBarrierO utside_I3"
"X3","FLAGS = REST_READONLY","HBW_I4","","HBW - I4 = Reference switch vertical axis -  IX_HBW_RefSwitchVer ticalAxis_I4"
"X4","FLAGS = REST_READONLY","HBW_A1","","HBW - A1 = Trail sensor (signal 1, lower) -  IX_HBW_TrailSensor1L ower_A1"
"X5","FLAGS = REST_READONLY","HBW_A2","","HBW - A2 = Trail sensor (signal 2, upper) -  IX_HBW_TrailSensor2 Upper_A2"
"X6","FLAGS = REST_READONLY","HBW_B3","","HBW - B3 = Encoder vertical axis imulse 1 -  IX_HBW_EncoderVerti calAxisImp1_B3"
"X7","FLAGS = REST_READONLY","HBW_B4","","HBW - B4 = Encoder vertical axis imulse 2 -  IX_HBW_EncoderVerti calAxisImp2_B4"
"X8","FLAGS = REST_READONLY","HBW_B1","","HBW - B1 = Encoder horizontal axis imulse 1 -  IX_HBW_EncoderHoriz ontalAxisImp1_B1"
"X9","FLAGS = REST_READONLY","HBW_B2","","HBW - B2 = Encoder horizontal axis imulse 2 -  IX_HBW_EncoderHoriz ontalAxisImp2_B2"
"X10","FLAGS = REST_READONLY","HBW_I5","","HBW - I5 = Reference switch cantilever front -  IX_HBW_SwitchCantile verFront_I5"
"X11","FLAGS = REST_READONLY","HBW_I6","","HBW - I6 = Reference switch cantilever back -  IX_HBW_SwitchCantile verBack_I6"
"X12","FLAGS = REST_READONLY","MPO_I1","","MPO - I1 = Reference switch turn-table (position vacuum) -  IX_MPO_RefSwitchTur nTable_PosVac_I1"
"X13","FLAGS = REST_READONLY","MPO_I2","","MPO - I2 = Reference switch turn-table (position belt) -  IX_MPO_RefSwitchTur nTable_PosBelt_I2"
"X14","FLAGS = REST_READONLY","MPO_I3","","MPO - I3 = Light barrier end of conveyor belt -  IX_MPO_LightBarrierEn dOfConBelt_I3"
"X15","FLAGS = REST_READONLY","MPO_I4","","MPO - I4 = Reference switch turn-table (position saw) -  IX_MPO_RefSwitchTur nTable_PosSaw_I4"
"X16","FLAGS = REST_READONLY","MPO_I5","","MPO - I5 = Reference switch vacuum (position turn-table) -  IX_MPO_RefSwitchVac _PosTurnTable_I5"
"X17","FLAGS = REST_READONLY","MPO_I6","","MPO - I6 = Reference switch oven feeder inside -  IX_MPO_RefSwitchOv enFeederInside_I6"
"X18","FLAGS = REST_READONLY","MPO_I7","","MPO - I7 = Reference switch oven feeder outside -  IX_MPO_RefSwitchOv enFeederOutside_I7"
"X19","FLAGS = REST_READONLY","MPO_I8","","MPO - I8 = Reference switch vacuum (position oven) -  IX_MPO_RefSwitchVac _PosOven_I8"
"X24","FLAGS = REST_READONLY","MPO_I9","","MPO - I9 = Light barrier oven -  IX_MPO_LightBarrierO v en_I9"
"X25","FLAGS = REST_READONLY","VGR_I1","","VGR - I1 = Reference switch vertical axis -  IX_VGR_RefSwitchVert icalAxis_I1"
"X26","FLAGS = REST_READONLY","VGR_I2","","VGR - I2 = Reference switch horizontal axis -  IX_VGR_RefSwitchHori zontalAxis_I2"
"X27","FLAGS = REST_READONLY","VGR_I3","","VGR - I3 = Reference switch rotate -  IX_VGR_RefSwitchRot ate_I3"
"X28","FLAGS = REST_READONLY","VGR_B1","","VGR - B1 = Encoder vertical axis imulse 1 -  IX_VGR_EncoderVertic alAxisImp1_B1"
"X29","FLAGS = REST_READONLY","VGR_B2","","VGR - B2 = Encoder vertical axis imulse 2 -  IX_VGR_EncoderVertic alAxisImp2_B2"
"X30","FLAGS = REST_READONLY","VGR_B3","","VGR - B3 = Encoder horizontal axis imulse 1 -  IX_VGR_EncoderHoriz ontalAxisImp1_B3"
"X31","FLAGS = REST_READONLY","VGR_B4","","VGR - B4 = Encoder horizontal axis imulse 2 -  IX_VGR_EncoderHoriz ontalAxisImp2_B4"
"X32","FLAGS = REST_READONLY","VGR_B5","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp1_B5"
"X33","FLAGS = REST_READONLY","VGR_B6","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp2_B6"
"X34","FLAGS = REST_READONLY","SLD_I1","","SLD - I1 = Pulse counter -  IX_SLD_PulseCounter_ I1"
"X35","FLAGS = REST_READONLY","SLD_I2","","SLD - I2 = Light barrier inlet -  IX_SLD_LightBarrierInl e t_I2"
"X36","FLAGS = REST_READONLY","SLD_I3","","SLD - I3 = Light barrier behind color sensor -  IX_SLD_LightBarrierBe hindColorSensor_I3"
"X37","FLAGS = REST_READONLY","SLD_I5","","SLD - I5 = Light barrier white -  IX_SLD_LightBarrierW h ite_I5"
"X38","FLAGS = REST_READONLY","SLD_I6","","SLD - I6 = Light barrier red -  IX_SLD_LightBarrierRe d_I6"
"X39","FLAGS = REST_READONLY","SLD_I7","","SLD - I7 = Light barrier blue -  IX_SLD_LightBarrierBl u e_I7"
"X40","FLAGS = REST_READONLY","SSC_I1","","SSC - I1 = Reference switch vertical axis -  IX_SSC_RefSwitchVerti calAxis_I1"
"X41","FLAGS = REST_READONLY","SSC_I2","","SSC - I2 = Reference switch horizontal axis -  IX_SSC_RefSwitchHori zontalAxis_I2"
"X42","FLAGS = REST_READONLY","SSC_I3","","SSC - I3 = Light barrier inlet -  IX_SSC_LightBarrierSto rage_I3"
"X43","FLAGS = REST_READONLY","SSC_I4","","SSC - I4 = Light barrier behind color sensor -  IX_SSC_LightBarrierOu t sourcing_I4"
"X44","FLAGS = REST_READONLY","SSC_B1","","SSC - B1 = Encoder vertical axis imulse 1 -  IX_SSC_EncoderVertic alAxisImp1_B1"
"X45","FLAGS = REST_READONLY","SSC_B2","","SSC - B2 = Encoder vertical axis imulse 2 -  IX_SSC_EncoderVertic alAxisImp2_B2"
"X46","FLAGS = REST_READONLY","SSC_B3","","SSC - B3 = Encoder horizontal axis imulse 1 -  IX_SSC_EncoderHorizo ntalAxisImp1_B3"
"X47","FLAGS = REST_READONLY","SSC_B4","","SSC - B4 = Encoder horizontal axis imulse 2 -  IX_SSC_EncoderHorizo ntalAxisImp2_B4"
"X56","FLAGS = REST_READONLY","VGR_PWM_ROTATE_1","","VGR - B5 = Encoder rotate impulse 1 -  IX_VGR_EncoderRotat eImp 1_B5"
"X57","FLAGS = REST_READONLY","VGR_PWM_ROTATE_2","","VGR - B6 = Encoder rotate impulse 2 -  IX_VGR_EncoderRotat eImp 2_B6"
"Y4","FLAGS = REST_READONLY","HBW_Q5","","HBW - Q5 = Motor M3 vertical axis downward -  QX_HBW_M3_Vertical AxisDownward_Q5"
"Y5","FLAGS = REST_READONLY","HBW_Q6","","HBW - Q6 = Motor M3 vertical axis upward -  QX_HBW_M3_Vertical AxisUpward_Q6"
"Y6","FLAGS = REST_READONLY","HBW_Q7","","HBW - Q7 = Motor M4 cantilever forward -  QX_HBW_M4_Cantilev erForward_Q7"
"Y7","FLAGS = REST_READONLY","HBW_Q8","","HBW - Q8 = Motor M4 cantilever backward -  QX_HBW_M4_Cantilev erBackward_Q8"
"Y15","FLAGS = REST_READONLY","MPO_Q8","","MPO - Q8 = Motor M5 vacuum towards turn- table -  QX_MPO_M5_Vacuum TowardsTurnTable_Q8"
"Y16","FLAGS = REST_READONLY","MPO_Q9","","MPO - Q9 = Light oven -  QX_MPO_LightOven_Q 9"
"Y17","FLAGS = REST_READONLY","MPO_Q10","","MPO - Q10 = Compressor -  QX_MPO_Compressor_ Q10"
"Y18","FLAGS = REST_READONLY","MPO_Q11","","MPO - Q11 = Valve vacuum -  QX_MPO_ValveVacuu m_Q11"
"Y19","FLAGS = REST_READONLY","MPO_Q12","","MPO - Q12 = Valve lowering -  QX_MPO_ValveLoweri ng_Q12"
"Y20","FLAGS = REST_READONLY","MPO_Q13","","MPO - Q13 = Valve oven door -  QX_MPO_ValveOvenD oor_Q13"
"Y21","FLAGS = REST_READONLY","MPO_Q14","","MPO - Q14 = Valve feeder -  QX_MPO_ValveFeeder _Q14"
"Y22","FLAGS = REST_READONLY","VGR_Q1","","VGR - Q1 = Motor M1 vertical axis up -  QX_VGR_M1_VerticalA xisUp_Q1"
"Y23","FLAGS = REST_READONLY","VGR_Q2","","VGR - Q2 = Motor M1 vertical axis down -  QX_VGR_M1_VerticalA xisDown_Q2"
"Y24","FLAGS = REST_READONLY","VGR_Q3","","VGR - Q3 = Motor M2 horizontal axis backward -  QX_VGR_M2_Horizont alAxisBackward_Q3"
"Y25","FLAGS = REST_READONLY","VGR_Q4","","VGR - Q4 = Motor M2 horizontal axis forward -  QX_VGR_M2_Horizont alAxisForward_Q4"
"Y26","FLAGS = REST_READONLY","VGR_Q5","","VGR - Q5 = Motor M3 rotate clockwise -  QX_VGR_M3_RotateCl ockwise_Q5"
"Y27","FLAGS = REST_READONLY","VGR_Q6","","VGR - Q6 = Motor M3 rotate counterclockwise -  QX_VGR_M3_RotateC ounterclockwise_Q6"
"Y28","FLAGS = REST_READONLY","VGR_Q7","","VGR - Q7 = Compressor -  QX_VGR_Compressor_ Q7"
"Y29","FLAGS = REST_READONLY","VGR_Q8","","VGR - Q8 = Valve vacuum -  QX_VGR_ValveVacuu m_Q8"
"Y30","FLAGS = REST_READONLY","SLD_Q1","","SLD - Q1 = Motor M1conveyor belt -  QX_SLD_M1_Conveyor Belt_Q1"
"Y31","FLAGS = REST_READONLY","SLD_Q2","","SLD - Q2 = Compressor -  QX_SLD_Compressor_ Q2"
"Y32","FLAGS = REST_READONLY","SLD_Q3","","SLD - Q3 = Valve first ejector (white) -  QX_SLD_ValveFirstEje ctorWhite_Q3"
"Y33","FLAGS = REST_READONLY","SLD_Q4","","SLD - Q4 = Valve second ejector (red) -  QX_SLD_ValveSecond EjectorRed_Q4"
"Y34","FLAGS = REST_READONLY","SLD_Q5","","SLD - Q5 = Valve third ejector (blue) -  QX_SLD_ValveThirdEje ctorBlue_Q5"
"Y35","FLAGS = REST_READONLY","SSC_Q1","","SSC - Q1 = Motor M1 vertical axis up -  QX_SSC_M1_VerticalA xisUp_Q1"
"Y36","FLAGS = REST_READONLY","SSC_Q2","","SSC - Q2 = Motor M1 vertical axis down -  QX_SSC_M1_VerticalA xisDown_Q2"
"Y37","FLAGS = REST_READONLY","SSC_Q3","","SSC - Q3 = Motor M2 horizontal axis backward -  QX_SSC_M2_Horizonta lAxisClockwise_Q3"
"Y38","FLAGS = REST_READONLY","SSC_Q4","","SSC - Q4 = Motor M2 horizontal axis forward -  QX_SSC_M2_Horizonta lAxisCounterclockwise_ Q4"
"Y39","FLAGS = REST_READONLY","SSC_Q5","","SSC - Q5 = LED Green -  QX_SSC_LED_Green_ Q5"
"Y40","FLAGS = REST_READONLY","SSC_Q6","","SSC - Q6 = LED Yellow -  QX_SSC_LED_Yellow_ Q6"
"Y41","FLAGS = REST_READONLY","SSC_Q7","","SSC - Q7 = LED Red -  QX_SSC_LED_Red_Q 7"
"Y42","FLAGS = REST_READONLY","SSC_Q8","","SSC - Q8 = LED Red Online -  QX_SSC_LED_Red_O nline_Q8"
"Y43","FLAGS = REST_READONLY","MPO_Q4","","MPO - Q4 = Motor M3 saw -  QX_MPO_M3_Saw_Q4"
"Y44","FLAGS = REST_READONLY","MPO_Q5","","MPO - Q5 = Motor M4 oven feeder retract -  QX_MPO_M4_OvenFe ederRetract_Q5"
"Y45","FLAGS = REST_READONLY","MPO_Q1","","MPO - Q1 = Motor M1 turn-table clockwise -  QX_MPO_M1_TurnTab leClockwise_Q1"
"Y46","FLAGS = REST_READONLY","MPO_Q2","","MPO - Q2 = Motor M1 turn-table counterclockwise -  QX_MPO_M1_TurnTab leCounterclockwise_Q2"
"Y47","FLAGS = REST_READONLY","MPO_Q3","","MPO - Q3 = Motor M2 conveyor belt forward -  QX_MPO_M2_Conveyo rBeltForward_Q3"
"Y48","FLAGS = REST_READONLY","HBW_Q1","","HBW - Q1 = Motor M1 conveyor belt forward -  QX_HBW_M1_Convey orBeltForward_Q1"
"Y49","FLAGS = REST_READONLY","HBW_Q2","","HBW - Q2 = Motor M1 conveyor belt backward -  QX_HBW_M1_Convey orBeltBackward_Q2"
"Y50","FLAGS = REST_READONLY","HBW_Q3","","HBW - Q3 = Motor M2 horizontal towards rack -  QX_HBW_M2_Horizont alTowardsRack_Q3"
"Y51","FLAGS = REST_READONLY","HBW_Q4","","HBW - Q4 = Motor M2 horizontal towards conveyor belt -  QX_HBW_M2_Horizont alTowardsConveyorBel t _Q4"
"Y52","FLAGS = REST_READONLY","MPO_Q6","","MPO - Q6 = Motor M4 oven feeder extend -  QX_MPO_M4_OvenFe ederExtend_Q6"
"Y53","FLAGS = REST_READONLY","MPO_Q7","","MPO - Q7 = Motor M5 vacuum towards oven -  QX_MPO_M5_Vacuum TowardsOven_Q7"
"Y80","FLAGS = REST_READONLY","HBW_PWM_M1","","QW_HBW_PWM_Con veyor Belt_M1"
"Y81","FLAGS = REST_READONLY","HBW_PWM_M2","","HBW = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti cal_ M3"
"Y82","FLAGS = REST_READONLY","HBW_PWM_M3","","HBW  = PWM Motor M3 vertical axis -  QW_HBW_PWM_Verti calA xis_M3"
"Y83","FLAGS = REST_READONLY","HBW_PWM_M4","","HBW  = PWM Motor M4 cantilever -  QW_HBW_PWM_Canti leve r_M4"
"Y88","FLAGS = REST_READONLY","VGR_PWM_M1","","VGR = PWM Motor M1 vertical axis -  QW_VGR_PWM_Vertic al_ M1"
"Y89","FLAGS = REST_READONLY","VGR_PWM_M2","","VGR = PWM Motor M2 horizontal axis -  QW_VGR_PWM_Horiz ontal _M2"
"Y90","FLAGS = REST_READONLY","VGR_PWM_M3","","VGR = PWM Motor M3 rotate axis -  QW_VGR_PWM_Rotat e_M 3"
"Y91","FLAGS = REST_READONLY","MPO_PWM_M5","","MPO = PWM Motor M5 turn-table -  QW_MPO_PWM_Vacu um_ M5"
"Y92","FLAGS = REST_READONLY","SSC_PWM_M1","","SSC = PWM Motor M1 vertical axis -  QW_SSC_PWM_Vertic al_ M1"
"Y93","FLAGS = REST_READONLY","SSC_PWM_M2","","SSC = PWM Motor M2 horizontal axis -  QW_SSC_PWM_Horiz ontal _M2"
"Y94","FLAGS = REST_READONLY","MPO_PWM_M1","","MPO = PWM Motor M1 turn-table -  QW_MPO_PWM_Turn Table _M1"
"WX0","FLAGS = REST_READONLY","SLD_A4","","SLD - A4 = Color sensor -  IW_SLD_ColorSensor_ A4"
"WX1","FLAGS = REST_READONLY","SSC_A1","","SSC - A1 = Color sensor -  IW_SSC_ColorSensor_ A1"
"C0","FLAGS = REST_READONLY","NOP","",""
"C1","FLAGS = REST_READONLY","CALL","",""
"C11","FLAGS = REST_READONLY","C11_Interlock","","Used to delay logic by one scan"
"C12","FLAGS = REST_READONLY","C12_Interlock_2","","Used to delay logic by one scan"
"C20","FLAGS = REST_READONLY","HBW_Has_Pallet","","True when carrying a pallet"
"C51","FLAGS = REST_READONLY","X_Direction","","True: Left False: Right"
"C52","FLAGS = REST_READONLY","Z_Direction","","True: Down False: Up"
"C80","FLAGS = REST_READONLY","Conveyor_Timeout","","Bit high when Conveyor Timeout timer active"
"C90","FLAGS = REST_READONLY","HBW_XY_PID_EN","","Enables PID control in HBW_Move_XZ"
"C101","FLAGS = REST_READONLY","HBW_T1_Send","Modbus MC101","Task to deliver a pallet to conveyor"
"C102","FLAGS = REST_READONLY","HBW_T2_Receive","Modbus MC102","Task to pickup a pallet from conveyor"
"C103","FLAGS = REST_READONLY","HBW_T3_Reset","Modbus MC103","Reinitialize and home all axises"
"C104","FLAGS = REST_READONLY","HBW_T4_Manual","Modbus MC104","Switch to manual mode"
"C110","FLAGS = REST_READONLY","HBW_Move_X_L","Modbus MC110","Move Horizontal Axis towards bay"
"C111","FLAGS = REST_READONLY","HBW_Move_X_R","Modbus MC111","Move Horizontal Axis towards Conveyor"
"C112","FLAGS = REST_READONLY","HBW_Move_Y_In","Modbus MC112","Move Cantilever In"
"C113","FLAGS = REST_READONLY","HBW_Move_Y_Out","Modbus MC113","Move Cantilever Out"
"C114","FLAGS = REST_READONLY","HBW_Move_Z_Up","Modbus MC114","Move Vertical Axis Up"
"C115","FLAGS = REST_READONLY","HBW_Move_Z_Down","Modbus MC115","Move Vertical Axis Down"
"C116","FLAGS = REST_READONLY","HBW_Conveyor_In","Modbus MC116","Move Conveyor In"
"C117","FLAGS = REST_READONLY","HBW_Conveyor_Out","Modbus MC117","Move Conveyor Out"
"C130","FLAGS = REST_READONLY","HBW_Status_Ready","Modbus MC130","On when ready for a task"
"C133","FLAGS = REST_READONLY","HBW_Mov_Conveyor","Modbus MC133","Status Conveyor Moving"
"C134","FLAGS = REST_READONLY","HBW_Moving_X","Modbus MC134","Status GantryMovingX"
"C135","FLAGS = REST_READONLY","HBW_Moving_Y","Modbus MC135","Status GantryMovingY"
"C136","FLAGS = REST_READONLY","HBW_Moving_Z","Modbus MC136","Status GantryMovingZ"
"C138","FLAGS = REST_READONLY","HBW_Status_Y_Pos","Modbus MC138","Current Y position"
"C141","FLAGS = REST_READONLY","HBW_Target_Y_Pos","Modbus MC141","Target Y position"
"C150","FLAGS = REST_READONLY","HBW_MoveComplete","","HBW_Move_XZ completion interlock."
"C180","FLAGS = REST_READONLY","HBW_Fault","Modbus MC180","Status in Fault State"
"C182","FLAGS = REST_READONLY","Fault_X_Target","","Active when X target out of range"
"C183","FLAGS = REST_READONLY","Fault_Z_target","","Active when Z target out of range"
"C400","FLAGS = REST_READONLY","VGR_T0","",""
"C410","FLAGS = REST_READONLY","VGR_T1","",""
"C420","FLAGS = REST_READONLY","VGR_T2","",""
"C430","FLAGS = REST_READONLY","VGR_T3","",""
"C440","FLAGS = REST_READONLY","VGR_T4","",""
"C500","FLAGS = REST_READONLY","VGR_Man_Control","",""
"C701","FLAGS =","","","VGR clear of MPO pickup"
"C799","FLAGS = REST_READONLY","VGR_RESET","",""
"C840","FLAGS = REST_READONLY","Saw_Enable","",""
"C841","FLAGS = REST_READONLY","MPO_Ready","",""
"C842","FLAGS = REST_READONLY","MPO_Reset","",""
"C900","FLAGS = REST_READONLY","Vacuum_Unloaded","","Set to on when the vacuum leaves the unload state. Reset once we jump from the turn table Idle state"
"C901","FLAGS = REST_READONLY","Entered_End_Belt","",""
"C1706","FLAGS = REST_READONLY","Color_Outlet_Exi","",""
"C2000","FLAGS = REST_READONLY","Auto_Mode","","Automatic Mode Enabled"
"C2001","FLAGS = REST_READONLY","Manual_Mode","","Manual Mode Enabled"
"V0","FLAGS = REST_READONLY","ROW_1","","Z Value"
"V1","FLAGS = REST_READONLY","ROW_2","","ZValue"
"V2","FLAGS = REST_READONLY","ROW_3","","Z Value"
"V3","FLAGS = REST_READONLY","COLUMN_1","",""
"V4","FLAGS = REST_READONLY","COLUMN_2","",""
"V5","FLAGS = REST_READONLY","COLUMN_3","",""
"V105","FLAGS = REST_READONLY","HBW_Task_X_slot","Modbus MHR105","Value for slot X coord"
"V106","FLAGS = REST_READONLY","HBW_Task_Y_slot","Modbus MHR106","Value for slot y coord"
"V118","FLAGS = REST_READONLY","HBW_PWM_Set_X","Modbus MHR118","Set Horizontal Axis PWM Duty Cycle %"
"V119","FLAGS = REST_READONLY","HBW_PWM_Set_Y","Modbus MHR119","Set Cantilever Axis PWM Duty Cycle %"
"V120","FLAGS = REST_READONLY","HBW_PWM_Set_Z","Modbus MHR120","Set Vertical Axis PWM Duty cycle %"
"V131","FLAGS = REST_READONLY","HBW_Cur_Progress","Modbus MHR131","0 to 100 percent job completion"
"V132","FLAGS = REST_READONLY","HBW_Cur_Stage","Modbus MHR132","Current stage number"
"V137","FLAGS = REST_READONLY","HBW_Status_X_Pos","Modbus MHR137","Current X encoder position"
"V139","FLAGS = REST_READONLY","HBW_Status_Z_Pos","Modbus MHR139","Current Z encoder position"
"V140","FLAGS = REST_READONLY","HBW_Target_X_Pos","Modbus MHR140","Target X encoder position"
"V142","FLAGS = REST_READONLY","HBW_Target_Z_Pos","Modbus MHR142","Target Z encoder position"
"V181","FLAGS = REST_READONLY","HBW_Fault_code","Modbus MHR181","Current Fault code"
"V801","FLAGS = REST_READONLY","VGR_Fault_Code","",""
"V1600","FLAGS = REST_READONLY","Oven_Bake_Time","",""
"N810","FLAGS = REST_READONLY","VGR_Rot_Target","",""
"N811","FLAGS = REST_READONLY","VGR_X_Target","",""
"N812","FLAGS = REST_READONLY","VGR_Y_Target","",""
"D0","FLAGS = REST_READONLY","MC","",""
"D140","FLAGS = REST_READONLY","X_Start_Position","","Distance to target"
"D142","FLAGS = REST_READONLY","Y_Start_Position","","Distance to target"
"D143","FLAGS = REST_READONLY","HBW_PWM_Cur_X","","PWM value for X for XZ movement task"
"D144","FLAGS = REST_READONLY","HBW_PWM_Cur_Z","","PWM value for Z for XZ movement task"
"T3","FLAGS = REST_READONLY","T_HBW_S6","",""
"T4","FLAGS = REST_READONLY","T_Conveyor_Timer","","Used to detect conveyor faults"
"HBW_Program.S10","FLAGS = REST_READONLY","J0","",""
"MPO_Program.S0","FLAGS = REST_READONLY","_Init_MPO11","",""
"MPO_Program.S1","FLAGS = REST_READONLY","_Oven_Reset11","",""
"MPO_Program.S2","FLAGS = REST_READONLY","_Vacuum_Reset11","",""
"MPO_Program.S3","FLAGS = REST_READONLY","_TurnTable_Rese2","",""
"MPO_Program.S4","FLAGS = REST_READONLY","_Oven_Load11","",""
"MPO_Program.S5","FLAGS = REST_READONLY","_Vacuum_Move_Ov2","",""
"MPO_Program.S6","FLAGS = REST_READONLY","_TurnTable_Saw11","",""
"MPO_Program.S7","FLAGS = REST_READONLY","_Oven_Bake11","",""
"MPO_Program.S8","FLAGS = REST_READONLY","_Vacuum_Load11","",""
"MPO_Program.S9","FLAGS = REST_READONLY","_TurnTable_Unlo2","",""
"MPO_Program.S10","FLAGS = REST_READONLY","_Oven_Unload11","",""
"MPO_Program.S11","FLAGS = REST_READONLY","_Vacuum_Move_Tu2","",""
"MPO_Program.S12","FLAGS = REST_READONLY","_TurnTable_Belt2","",""
"MPO_Program.S13","FLAGS = REST_READONLY","_Vacuum_Unload11","",""
"UD0","FLAGS =","_aMPO_PWM_M5","","@MPO_PWM_M5"
"US0","FLAGS =","_CP_Strogram_A","","CP_State_Program"
"US1","FLAGS =","_VGR_Movement","","VGR_Movement"
"US2","FLAGS =","_SSC_Check_InOut","","SSC_Check_InOut"
"US3","FLAGS =","_sMPO_PWM_M5","","$MPO_PWM_M5"
"UB0","FLAGS =","_VGR_MisScan_A","","VGR_Movement.Done ThisScan"
#END

